{"version":3,"sources":["components/Header/MainSvg.jsx","components/Header/TasksSvg.jsx","components/Header/StatisticSvg.jsx","components/Header/Header.jsx","App.js","constants.js","actions/actionCreator.js","assets/pic/Home.png","components/FirstTime/FirstTime.jsx","services.js","components/HomeStat/HomeStat.jsx","containers/Home/Home.jsx","components/Title/Title.jsx","components/CircleGraph/CircleGraph.jsx","components/InlineGraph/InlineGraph.jsx","components/InlineGraphs/InlineGraphs.jsx","components/Graph/Graph.jsx","containers/Statistic/Statistic.jsx","components/Input/Input.jsx","components/Category/Category.jsx","components/Categories/Categories.jsx","components/Filter/Filter.jsx","components/Task/Task.jsx","components/TaskList/TaskList.jsx","containers/Tasks/Tasks.jsx","components/NotFound/NotFound.jsx","reducers/tasks.js","reducers/categories.js","reducers/activeCategory.js","reducers/activeFilter.js","reducers/statistic.js","store.js","reducers/index.js","index.js"],"names":["MainSvg","className","viewBox","xmlns","d","fill","stroke","strokeLinecap","strokeLinejoin","strokeMiterlimit","strokeWidth","TasksSvg","StatisticSvg","Header","exact","to","App","children","ActionTypes","Week","name","color","width","count","WeekDay","Year","MonthName","Actions","AddTask","id","text","category","isCompleted","type","DeleteTask","ChangeTask","AddCategory","DeleteCategory","ChangeCategory","AddCountCategory","SubtractCountCategory","ChangeActiveCategory","ChangeActiveFilter","UpdateStat","time","FirstTime","src","HomeImg","alt","declOfNum","n","textForms","n1","Math","abs","getDay","index","HomeStat","dayOfLastTask","ComletedTasksCount","lastTasks","firstTasks","classes","classNames","map","defaultProps","connect","tasks","statistic","React","useEffect","today","Date","comletedTasksCount","filter","floor","getTime","length","max","allTime","sort","a","b","slice","Title","attrs","CircleGraph","procent","LineRef","useRef","current","setAttribute","height","cx","cy","r","ref","strokeDasharray","strokeDashoffset","InlineGraph","style","backgroundColor","InlineGraphs","title","data","Graph","sign","useState","DATA","setDATA","widthColumn","path","i","item","y2","x2","y1","x1","offset","stopColor","fillOpacity","strokeOpacity","ry","rx","fontSize","TASKS","task","Monday","setDate","getDate","Sunday","weekDay","weekCount","week","reduce","allTaskWeek","completedTaskWeek","completedTaskYear","WEEK","day","forEach","maxWeek","YEAR","month","year","getMonth","maxYear","getStatistic","Input","label","error","htmlFor","Category","active","onClick","onDelClick","onChangeClick","isChange","setIsChange","newName","setNewName","newColor","setNewColor","stopPropagation","e","value","onChange","target","Categories","categories","activeCategory","onAddClick","Buttons","Filter","activeFilter","Task","TaskList","find","ctg","props","filteredTasks","setValue","addTask","key","undefined","onKeyDown","placeholder","NotFound","version","x","y","transform","attributeName","from","dur","repeatCount","in","stdDeviation","ADD_TASK","DELETE_TASK","CHANGE_TASK","load","namespace","state","ADD_CATEGORY","DELETE_CATEGORY","CHANGE_CATEGORY","ADD_COUNT_CATEGORY","SUBTRACT_COUNT_CATEGORY","CATEGORIES","CHANGE_ACTIVECATEGORY","CHANGE_ACTIVEFILTER","UPDATE_STAT","STAT","date","lastUpdate","toDateString","Array","preloadedState","TIME","LastUpdate","getFullYear","rootReducer","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","save","ReactDOM","render","component","Home","Tasks","Statistic","document","getElementById"],"mappings":"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","file":"static/js/main.ea5b1bd6.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction MainSvg() {\r\n    return (\r\n        <svg className='nav__img' viewBox='0 0 32 32' xmlns='http://www.w3.org/2000/svg'>\r\n            <path\r\n                d='  M27,29H5V17H3.235c-1.138,0-1.669-1.419-0.812-2.168L14.131,3.745c1.048-0.993,2.689-0.993,3.737,0l11.707,11.087  C30.433,15.58,29.902,17,28.763,17H27V29z'\r\n                fill='none' stroke='#ccc' strokeLinecap='round' strokeLinejoin='round'\r\n                strokeMiterlimit='10' strokeWidth='2' />\r\n            <path d='  M20,29h-8v-6c0-2.209,1.791-4,4-4h0c2.209,0,4,1.791,4,4V29z' fill='none'\r\n                stroke='#ccc' strokeLinecap='round' strokeLinejoin='round' strokeMiterlimit='10'\r\n                strokeWidth='2' />\r\n        </svg>\r\n    );\r\n}\r\n\r\nexport default MainSvg;","import React from 'react';\r\n\r\nfunction TasksSvg() {\r\n    return (\r\n        <svg className='nav__img' xmlns='http://www.w3.org/2000/svg' viewBox='0 0 438.891 438.891'\r\n            fill='#ccc'>\r\n            <path d='M347.968,57.503h-39.706V39.74c0-5.747-6.269-8.359-12.016-8.359h-30.824c-7.314-20.898-25.6-31.347-46.498-31.347\r\n           c-20.668-0.777-39.467,11.896-46.498,31.347h-30.302c-5.747,0-11.494,2.612-11.494,8.359v17.763H90.923\r\n           c-23.53,0.251-42.78,18.813-43.886,42.318v299.363c0,22.988,20.898,39.706,43.886,39.706h257.045\r\n           c22.988,0,43.886-16.718,43.886-39.706V99.822C390.748,76.316,371.498,57.754,347.968,57.503z M151.527,52.279h28.735\r\n           c5.016-0.612,9.045-4.428,9.927-9.404c3.094-13.474,14.915-23.146,28.735-23.51c13.692,0.415,25.335,10.117,28.212,23.51\r\n           c0.937,5.148,5.232,9.013,10.449,9.404h29.78v41.796H151.527V52.279z M370.956,399.185c0,11.494-11.494,18.808-22.988,18.808\r\n           H90.923c-11.494,0-22.988-7.314-22.988-18.808V99.822c1.066-11.964,10.978-21.201,22.988-21.42h39.706v26.645\r\n           c0.552,5.854,5.622,10.233,11.494,9.927h154.122c5.98,0.327,11.209-3.992,12.016-9.927V78.401h39.706\r\n           c12.009,0.22,21.922,9.456,22.988,21.42V399.185z' />\r\n            <path d='M179.217,233.569c-3.919-4.131-10.425-4.364-14.629-0.522l-33.437,31.869l-14.106-14.629\r\n           c-3.919-4.131-10.425-4.363-14.629-0.522c-4.047,4.24-4.047,10.911,0,15.151l21.42,21.943c1.854,2.076,4.532,3.224,7.314,3.135\r\n           c2.756-0.039,5.385-1.166,7.314-3.135l40.751-38.661c4.04-3.706,4.31-9.986,0.603-14.025\r\n           C179.628,233.962,179.427,233.761,179.217,233.569z' />\r\n            <path d='M329.16,256.034H208.997c-5.771,0-10.449,4.678-10.449,10.449s4.678,10.449,10.449,10.449H329.16\r\n           c5.771,0,10.449-4.678,10.449-10.449S334.931,256.034,329.16,256.034z' />\r\n            <path d='M179.217,149.977c-3.919-4.131-10.425-4.364-14.629-0.522l-33.437,31.869l-14.106-14.629\r\n           c-3.919-4.131-10.425-4.364-14.629-0.522c-4.047,4.24-4.047,10.911,0,15.151l21.42,21.943c1.854,2.076,4.532,3.224,7.314,3.135\r\n           c2.756-0.039,5.385-1.166,7.314-3.135l40.751-38.661c4.04-3.706,4.31-9.986,0.603-14.025\r\n           C179.628,150.37,179.427,150.169,179.217,149.977z' />\r\n            <path d='M329.16,172.442H208.997c-5.771,0-10.449,4.678-10.449,10.449s4.678,10.449,10.449,10.449H329.16\r\n           c5.771,0,10.449-4.678,10.449-10.449S334.931,172.442,329.16,172.442z' />\r\n            <path d='M179.217,317.16c-3.919-4.131-10.425-4.363-14.629-0.522l-33.437,31.869l-14.106-14.629\r\n           c-3.919-4.131-10.425-4.363-14.629-0.522c-4.047,4.24-4.047,10.911,0,15.151l21.42,21.943c1.854,2.076,4.532,3.224,7.314,3.135\r\n           c2.756-0.039,5.385-1.166,7.314-3.135l40.751-38.661c4.04-3.706,4.31-9.986,0.603-14.025\r\n           C179.628,317.554,179.427,317.353,179.217,317.16z' />\r\n            <path d='M329.16,339.626H208.997c-5.771,0-10.449,4.678-10.449,10.449s4.678,10.449,10.449,10.449H329.16\r\n           c5.771,0,10.449-4.678,10.449-10.449S334.931,339.626,329.16,339.626z' />\r\n        </svg>\r\n    );\r\n}\r\n\r\nexport default TasksSvg;","import React from 'react';\r\n\r\nfunction StatisticSvg() {\r\n    return (\r\n        <svg className='nav__img' viewBox='0 0 64 64' xmlns='http://www.w3.org/2000/svg' fill='#ccc'>\r\n            <path\r\n                d='M61,35H47a1,1,0,0,0-1,1V60H40V19a1,1,0,0,0-1-1H25a1,1,0,0,0-1,1V60H18V32a1,1,0,0,0-1-1H3a1,1,0,0,0-1,1V61a1,1,0,0,0,1,1H61a1,1,0,0,0,1-1V36A1,1,0,0,0,61,35ZM4,60V33H16V60Zm22,0V20H38V60Zm22,0V37H60V60Z' />\r\n            <path\r\n                d='M10,27a5.9834,5.9834,0,0,0,5.6486-8.0038l11.6771-7.2433a5.9807,5.9807,0,0,0,8.8335.562l12.4925,9.98a6.013,6.013,0,1,0,1.1891-1.61l-12.4925-9.98a6.0013,6.0013,0,1,0-10.9969-.7015L14.6743,17.2471A5.9977,5.9977,0,1,0,10,27Zm44-6a4,4,0,1,1-4,4A4.0045,4.0045,0,0,1,54,21ZM32,4a4,4,0,1,1-4,4A4.0045,4.0045,0,0,1,32,4ZM10,17a4,4,0,1,1-4,4A4.0045,4.0045,0,0,1,10,17Z' />\r\n        </svg>\r\n    );\r\n}\r\n\r\nexport default StatisticSvg;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport MainSvg from './MainSvg';\r\nimport TasksSvg from './TasksSvg';\r\nimport StatisticSvg from './StatisticSvg';\r\n\r\nimport './Header.scss';\r\n\r\nfunction Header() {\r\n    return (\r\n        <header className='navigation'>\r\n            <nav className='nav'>\r\n                <ul className='nav__links'>\r\n                    <li>\r\n                        <NavLink exact to='/' className='nav__link'>\r\n                            <MainSvg />\r\n                            Главная\r\n                        </NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink to='/tasks' className='nav__link'>\r\n                            <TasksSvg />\r\n                            Задачи\r\n                        </NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink to='/statistics' className='nav__link'>\r\n                            <StatisticSvg />\r\n                            Статистика\r\n                        </NavLink>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nimport Header from './components/Header/Header';\r\n\r\nfunction App({ children }) {\r\n  return (\r\n    <>\r\n      <Header />\r\n      <main className='main'>\r\n        {children}\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;","export const ActionTypes = {\r\n    ADD_TASK: 'ADD_TASK',\r\n    DELETE_TASK: 'DELETE_TASK',\r\n    CHANGE_TASK: 'CHANGE_TASK',\r\n\r\n    ADD_CATEGORY: 'ADD_CATEGORY',\r\n    DELETE_CATEGORY: 'DELETE_CATEGORY',\r\n    CHANGE_CATEGORY: 'CHANGE_CATEGORY',\r\n    ADD_COUNT_CATEGORY: 'ADD_COUNT_CATEGORY',\r\n    SUBTRACT_COUNT_CATEGORY: 'SUBTRACT_COUNT_CATEGORY',\r\n\r\n    CHANGE_ACTIVECATEGORY: 'CHANGE_ACTIVECATEGORY',\r\n\r\n    CHANGE_ACTIVEFILTER: 'CHANGE_ACTIVEFILTER',\r\n\r\n    UPDATE_STAT: 'UPDATE_STAT'\r\n}\r\n\r\nexport const Week = [\r\n    {\r\n        name: 'Понедельник',\r\n        color: '#C36EF4',\r\n        width: 0,\r\n        count: 0,\r\n    },\r\n    {\r\n        name: 'Вторник',\r\n        color: '#6E85D5',\r\n        width: 0,\r\n        count: 0,\r\n    },\r\n    {\r\n        name: 'Среда',\r\n        color: '#F9BB73',\r\n        width: 0,\r\n        count: 0,\r\n    },\r\n    {\r\n        name: 'Четверг',\r\n        color: '#70BFEA',\r\n        width: 0,\r\n        count: 0,\r\n    },\r\n    {\r\n        name: 'Пятница',\r\n        color: '#F97891',\r\n        width: 0,\r\n        count: 0,\r\n    },\r\n    {\r\n        name: 'Суббота',\r\n        color: '#94ec6c',\r\n        width: 0,\r\n        count: 0,\r\n    },\r\n    {\r\n        name: 'Воскресенье',\r\n        color: '#e4e26a',\r\n        width: 0,\r\n        count: 0,\r\n    },\r\n];\r\n\r\nexport const WeekDay = ['Пн', 'Вт', 'Ср', 'Чт', 'Пт', 'Сб', 'Вс'];\r\n\r\nexport const Year = [\r\n    {\r\n        name: 'Январь',\r\n        color: '#4887C6',\r\n        width: 0,\r\n        count: 0,\r\n    },\r\n    {\r\n        name: 'Февраль',\r\n        color: '#B64066',\r\n        width: 0,\r\n        count: 0,\r\n    },\r\n    {\r\n        name: 'Март',\r\n        color: '#8AA2B5',\r\n        width: 0,\r\n        count: 0,\r\n    },\r\n    {\r\n        name: 'Апрель',\r\n        color: '#D88F93',\r\n        width: 0,\r\n        count: 0,\r\n    },\r\n    {\r\n        name: 'Май',\r\n        color: '#B5C79C',\r\n        width: 0,\r\n        count: 0,\r\n    },\r\n    {\r\n        name: 'Июнь',\r\n        color: '#7F84B7',\r\n        width: 0,\r\n        count: 0,\r\n    },\r\n    {\r\n        name: 'Июль',\r\n        color: '#C76390',\r\n        width: 0,\r\n        count: 0,\r\n    },\r\n\r\n    {\r\n        name: 'Август',\r\n        color: '#7BAC79',\r\n        width: 0,\r\n        count: 0,\r\n    },\r\n    {\r\n        name: 'Сентябрь',\r\n        color: '#E7C632',\r\n        width: 0,\r\n        count: 0,\r\n    },\r\n    {\r\n        name: 'Октябрь',\r\n        color: '#C76733',\r\n        width: 0,\r\n        count: 0,\r\n    },\r\n\r\n    {\r\n        name: 'Ноябрь',\r\n        color: '#54643D',\r\n        width: 0,\r\n        count: 0,\r\n    },\r\n    {\r\n        name: 'Декабрь',\r\n        color: '#8D8D8D',\r\n        width: 0,\r\n        count: 0,\r\n    },\r\n];\r\n\r\nexport const MonthName = ['Янв', 'Фев', 'Мар', 'Апр', 'Май', 'Июн', 'Июл', 'Авг', 'Сен', 'Окт', 'Ноя', 'Дек'];","import { ActionTypes } from '../constants';\r\n\r\nconst Actions = {\r\n    AddTask: ({ id, text, category, isCompleted }) => ({\r\n        type: ActionTypes.ADD_TASK,\r\n        id,\r\n        text,\r\n        category,\r\n        isCompleted,\r\n    }),\r\n    DeleteTask: id => ({\r\n        type: ActionTypes.DELETE_TASK,\r\n        id,\r\n    }),\r\n    ChangeTask: id => ({\r\n        type: ActionTypes.CHANGE_TASK,\r\n        id,\r\n    }),\r\n    AddCategory: id => ({\r\n        type: ActionTypes.ADD_CATEGORY,\r\n        id,\r\n        count: 0,\r\n        name: 'Название',\r\n        color: '#cccccc',\r\n    }),\r\n    DeleteCategory: id => ({\r\n        type: ActionTypes.DELETE_CATEGORY,\r\n        id,\r\n    }),\r\n    ChangeCategory: ({ id, name, color, count }) => ({\r\n        type: ActionTypes.CHANGE_CATEGORY,\r\n        id,\r\n        name,\r\n        color,\r\n        count\r\n    }),\r\n    AddCountCategory: id => ({\r\n        type: ActionTypes.ADD_COUNT_CATEGORY,\r\n        id,\r\n    }),\r\n    SubtractCountCategory: id => ({\r\n        type: ActionTypes.SUBTRACT_COUNT_CATEGORY,\r\n        id,\r\n    }),\r\n    ChangeActiveCategory: id => ({\r\n        type: ActionTypes.CHANGE_ACTIVECATEGORY,\r\n        id,\r\n    }),\r\n    ChangeActiveFilter: id => ({\r\n        type: ActionTypes.CHANGE_ACTIVEFILTER,\r\n        id,\r\n    }),\r\n    UpdateStat: time => ({\r\n        type: ActionTypes.UPDATE_STAT,\r\n        time\r\n    })\r\n}\r\n\r\nexport default Actions;","export default __webpack_public_path__ + \"static/media/Home.26473b49.png\";","import React from 'react';\r\n\r\nimport HomeImg from '../../assets/pic/Home.png'\r\n\r\nimport './FirstTime.scss';\r\n\r\nfunction FirstTime() {\r\n    return (\r\n        <div className='home'>\r\n            <h1 className='home__title'>Добро пожаловать в ToDo</h1>\r\n            <p className='home__subtitle'>Добавь свою первую задачу</p>\r\n            <img className='home__pic' src={HomeImg} alt='' />\r\n        </div>\r\n    );\r\n}\r\nexport default FirstTime;","import { Week, Year } from './constants';\r\n\r\nexport function declOfNum(n, textForms) {\r\n    n = Math.abs(n) % 100;\r\n    let n1 = n % 10;\r\n    if (n > 10 && n < 20) { return textForms[2]; }\r\n    if (n1 > 1 && n1 < 5) { return textForms[1]; }\r\n    if (n1 === 1) { return textForms[0]; }\r\n    return textForms[2];\r\n}\r\n\r\nexport function getDay(index) { return index - 1 === -1 ? 6 : index - 1 };\r\n\r\nexport function getStatistic(tasks, statistic) {\r\n    const today = new Date();\r\n    const TASKS = tasks.filter(task => task.isCompleted === true);\r\n\r\n    const Monday = today.setDate(today.getDate() - getDay(today.getDay()));\r\n    const Sunday = today.setDate(today.getDate() + 6 - getDay(today.getDay()));\r\n\r\n    const weekDay = TASKS.filter(task => task.time > Monday && task.time <= Sunday);\r\n    const weekCount = statistic.week.reduce((a, b) => a + b, 0);\r\n\r\n    const allTaskWeek = tasks.length + weekCount;\r\n    const completedTaskWeek = weekDay.length + weekCount;\r\n    const completedTaskYear = TASKS.length + statistic.allTime;\r\n\r\n    const WEEK = Week.map((day, i) => ({ ...day, count: statistic.week[i] }));\r\n\r\n    weekDay.forEach(task => {\r\n        WEEK[getDay((new Date(task.time)).getDay())].count += 1;\r\n    });\r\n\r\n    let maxWeek = Math.max(...WEEK.map(day => day.count));\r\n    maxWeek = maxWeek === 0 ? 1 : maxWeek;\r\n\r\n    WEEK.forEach(day => {\r\n        day.width = day.count / maxWeek * 100;\r\n    });\r\n\r\n    const YEAR = Year.map((month, i) => ({ ...month, count: statistic.year[i] }));\r\n\r\n    TASKS.forEach(task => {\r\n        YEAR[(new Date(task.time)).getMonth()].count += 1;\r\n    });\r\n\r\n    let maxYear = Math.max(...YEAR.map(month => month.count));\r\n    maxYear = maxYear === 0 ? 1 : maxYear;\r\n\r\n    YEAR.forEach(month => {\r\n        month.width = month.count / maxYear * 100;\r\n    });\r\n    return [completedTaskWeek, allTaskWeek, WEEK, completedTaskYear, YEAR];\r\n}","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { declOfNum } from '../../services.js';\r\n\r\nimport './HomeStat.scss';\r\n\r\nfunction HomeStat({ className, dayOfLastTask, ComletedTasksCount, lastTasks, firstTasks }) {\r\n    const classes = classNames(\r\n        'home',\r\n        className\r\n    );\r\n\r\n    return (\r\n        <div className={classes}>\r\n            <div className='home__lastTask'>\r\n                {dayOfLastTask > 0 ?\r\n                    dayOfLastTask > 365 ?\r\n                        `Вы давно не выполняли задачи` :\r\n                        `Вы ${dayOfLastTask} ${declOfNum(dayOfLastTask, ['день', 'дня', 'дней'])} не выполняли задач` :\r\n                    `Сегодня вы выполнили ${ComletedTasksCount} ${declOfNum(ComletedTasksCount, ['задачу', 'задачи', 'задач'])}`}\r\n            </div>\r\n            <div className='home__stat stat'>\r\n                <div className='stat__lastTasks'>\r\n                    <div className='stat__title'>Последние выполненные задачи</div>\r\n                    {lastTasks.map(({ id, text }) => (\r\n                        <div key={id} className='stat__item'>\r\n                            {text}\r\n                        </div>))}\r\n                </div>\r\n                <div className='stat__firstTasks'>\r\n                    <div className='stat__title'>Самые ранние задачи</div>\r\n                    {firstTasks.map(({ id, text }) => (\r\n                        <div key={id} className='stat__item'>\r\n                            {text}\r\n                        </div>))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nHomeStat.propTypes = {\r\n    className: PropTypes.string,\r\n    dayOfLastTask: PropTypes.number.isRequired,\r\n    ComletedTasksCount: PropTypes.number,\r\n    lastTasks: PropTypes.array,\r\n    firstTasks: PropTypes.array,\r\n}\r\n\r\nHomeStat.defaultProps = {\r\n    className: '',\r\n    ComletedTasksCount: 0,\r\n    lastTasks: [],\r\n    firstTasks: [],\r\n}\r\n\r\nexport default HomeStat;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Actions from '../../actions/actionCreator';\r\nimport FirstTime from '../../components/FirstTime/FirstTime.jsx'\r\nimport HomeStat from '../../components/HomeStat/HomeStat.jsx'\r\n\r\nimport './Home.scss';\r\n\r\nfunction Home({ tasks, statistic, UpdateStat }) {\r\n    React.useEffect(() => {\r\n        UpdateStat();\r\n    }, [UpdateStat])\r\n\r\n    const today = new Date();\r\n    const comletedTasksCount = tasks.filter(({ time }) => time &&\r\n        (Math.floor(Math.abs(today.getTime() - time) / 86400000) === 0)).length;\r\n    const dayOfLastTask = Math.floor(Math.abs(today.getTime() - Math.max(...tasks.map(({ time }) => (time ? time : 0)))) / 86400000);\r\n\r\n    return (\r\n        <>\r\n            {statistic.allTime === 0 && tasks.length === 0 ?\r\n                <FirstTime /> :\r\n                <HomeStat\r\n                    dayOfLastTask={dayOfLastTask}\r\n                    ComletedTasksCount={comletedTasksCount}\r\n                    lastTasks={tasks.filter(({ time }) => time)}\r\n                    firstTasks={tasks.filter(({ time }) => !time).sort((a, b) => (a.id - b.id)).slice(0, 5)}\r\n                />}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default connect(({ tasks, statistic }) => ({\r\n    tasks,\r\n    statistic,\r\n}), { UpdateStat: Actions.UpdateStat })(Home);","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './Title.scss';\r\n\r\nfunction Title({ className, children, ...attrs }) {\r\n    const classes = classNames(\r\n        'title',\r\n        className,\r\n    );\r\n\r\n    return (\r\n        <div className={classes} {...attrs}>{children}</div>\r\n    );\r\n};\r\n\r\nTitle.propTypes = {\r\n    className: PropTypes.string,\r\n    children: PropTypes.string.isRequired,\r\n}\r\n\r\nTitle.defaultProps = {\r\n    className: '',\r\n    text: '',\r\n}\r\n\r\nexport default Title;","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './CircleGraph.scss';\r\n\r\nfunction CircleGraph({ className, procent }) {\r\n    const classes = classNames(\r\n        'circleGraph',\r\n        className,\r\n    );\r\n\r\n    const LineRef = React.useRef();\r\n\r\n    React.useEffect(() => {\r\n        LineRef.current.setAttribute('stroke-dashoffset', 100 - procent)\r\n    }, [procent]);\r\n\r\n    return (\r\n        <div className={classes}>\r\n            <svg width='98px' height='98px' viewBox='0 0 42 42'>\r\n                <circle cx='21' cy='21' r='16' fill='#f3f3f3'></circle>\r\n                <circle cx='21' cy='21' r='16' fill='transparent' stroke='#ccc' strokeWidth='3'>\r\n                </circle>\r\n                <circle ref={LineRef} cx='21' cy='21' r='16' fill='transparent' stroke='#4BD7C3'\r\n                    strokeWidth='3' strokeDasharray='100' strokeDashoffset={100}></circle>\r\n            </svg>\r\n        </div>\r\n    );\r\n}\r\n\r\nCircleGraph.propTypes = {\r\n    className: PropTypes.string,\r\n    procent: PropTypes.number,\r\n}\r\n\r\nCircleGraph.defaultProps = {\r\n    className: '',\r\n    procent: 0,\r\n}\r\n\r\nexport default CircleGraph;","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './InlineGraph.scss';\r\n\r\nfunction InlineGraph({ className, name, color, width, count }) {\r\n    const classes = classNames(\r\n        'inlineGraph',\r\n        className,\r\n    );\r\n\r\n    const LineRef = React.useRef();\r\n\r\n    React.useEffect(() => {\r\n        LineRef.current.style.width = width;\r\n    }, [width]);\r\n\r\n    return (\r\n        <div className={classes}>\r\n            <div className='inlineGraph__name'>{name}</div>\r\n            <div className='inlineGraph__content'>\r\n                <div className='inlineGraph__line'><span ref={LineRef} style={{ backgroundColor: color, width: 0 }}></span></div>\r\n                <div className='inlineGraph__value'>Выполнено: {count}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nInlineGraph.propTypes = {\r\n    className: PropTypes.string,\r\n    name: PropTypes.string,\r\n    color: PropTypes.string,\r\n    width: PropTypes.string,\r\n    count: PropTypes.number,\r\n}\r\n\r\nInlineGraph.defaultProps = {\r\n    className: '',\r\n    name: '',\r\n    color: '#cccccc',\r\n    width: '0%',\r\n    count: 0,\r\n}\r\n\r\nexport default InlineGraph;","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Title from '../../components/Title/Title';\r\nimport InlineGraph from '../InlineGraph/InlineGraph';\r\n\r\nimport './InlineGraphs.scss';\r\n\r\nfunction InlineGraphs({ className, title, data }) {\r\n    const classes = classNames(\r\n        'inlineGraphs',\r\n        className,\r\n    );\r\n\r\n    return (\r\n        <div className={classes}>\r\n            <Title >{title}</Title>\r\n            <div className='inlineGraphs__graph'>\r\n                {data.map(({ name, color, width, count }, index) => (\r\n                    <InlineGraph\r\n                        key={index}\r\n                        className='inlineGraphs__item'\r\n                        name={name}\r\n                        color={color}\r\n                        width={width + '%'}\r\n                        count={count}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nInlineGraphs.propTypes = {\r\n    className: PropTypes.string,\r\n    title: PropTypes.string,\r\n    data: PropTypes.array,\r\n}\r\n\r\nInlineGraphs.defaultProps = {\r\n    className: '',\r\n    title: '',\r\n    data: [],\r\n}\r\n\r\nexport default InlineGraphs;","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\nimport Title from '../Title/Title';\r\n\r\nimport './Graph.scss';\r\n\r\nfunction Graph({ className, title, data, sign }) {\r\n    const classes = classNames(\r\n        'graph',\r\n        className,\r\n    );\r\n\r\n    const [DATA, setDATA] = React.useState(data.map(() => ({ width: 0 })));\r\n\r\n    React.useEffect(() => {\r\n        setDATA(data);\r\n    }, [data]);\r\n\r\n    const count = data.length - 1;\r\n    const widthColumn = 420 / count;\r\n\r\n    let path = '';\r\n    for (let i = 0; i <= count; i++) {\r\n        path += (5 + i * widthColumn) + ',' + (105 - DATA[i].width) + ' ';\r\n    }\r\n\r\n    return (\r\n        <div className={classes}>\r\n            <Title className='ws-title'>{title}</Title>\r\n            <div className='graph__graph'>\r\n                <svg width='100%' height='100%' viewBox='0 0 430 110' xmlns='http://www.w3.org/2000/svg'>\r\n\r\n                    {DATA.map((item, index) => (\r\n                        <line key={index} y2='105' x2={5 + widthColumn * index} y1='5' x1={5 + widthColumn * index} strokeWidth='2' stroke='#ccc' />\r\n                    ))}\r\n                    <line y2='105' x2='425' y1='105' x1='5' strokeWidth='2' stroke='#ccc' />\r\n\r\n                    <linearGradient id='linear-gradient' x1='100%' y1='100%'>\r\n                        <stop offset='0%' stopColor='transparent' />\r\n                        <stop offset='100%' stopColor='#8799ED99' />\r\n                    </linearGradient>\r\n\r\n                    <path id='svg_7' d={`M ${path}425,105 5,105`}\r\n                        fill='url(#linear-gradient)' />\r\n                    <path id='svg_7' d={`M ${path}`} fillOpacity='null'\r\n                        strokeOpacity='null' strokeWidth='2' stroke='#8799ED' fill='none' />\r\n\r\n                    {DATA.map(({ width }, index) => (\r\n                        <ellipse key={index} stroke='#8799ED' ry='4' rx='4' cy={105 - width} cx={5 + index * widthColumn} fill='#fff' strokeWidth='2' />\r\n                    ))}\r\n                </svg>\r\n            </div>\r\n            <div className='graph__colnames' style={{ fontSize: 28 - count }}>\r\n                {sign.map((item, index) => (\r\n                    <div key={index} className='graph__colname'>{item}</div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nGraph.propTypes = {\r\n    className: PropTypes.string,\r\n    title: PropTypes.string,\r\n    data: PropTypes.array,\r\n    sign: PropTypes.array,\r\n}\r\n\r\nGraph.defaultProps = {\r\n    className: '',\r\n    title: '',\r\n    data: [],\r\n    sign: [],\r\n}\r\n\r\nexport default Graph;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { WeekDay, MonthName } from '../../constants';\r\nimport { getStatistic } from '../../services';\r\nimport Actions from '../../actions/actionCreator';\r\n\r\nimport Title from '../../components/Title/Title';\r\nimport CircleGraph from '../../components/CircleGraph/CircleGraph';\r\nimport InlineGraphs from '../../components/InlineGraphs/InlineGraphs';\r\nimport Graph from '../../components/Graph/Graph';\r\n\r\nimport './Statistic.scss';\r\n\r\nfunction Statistic({ tasks, statistic, UpdateStat }) {\r\n    React.useEffect(() => {\r\n        UpdateStat();\r\n    }, [UpdateStat])\r\n\r\n    const [completedTaskWeek, allTaskWeek, WEEK, completedTaskYear, YEAR] = getStatistic(tasks, statistic);\r\n\r\n    return (\r\n        <>\r\n            <div className='week-statistic'>\r\n                <div className='week-statistic__header ws-header'>\r\n                    <Title className='ws-title'>Задачи за неделю</Title>\r\n                    <div className='ws-header__completed'>Завершенные задачи</div>\r\n                    <div className='ws-header__number'>{`${completedTaskWeek}/${allTaskWeek}`}</div>\r\n                    <CircleGraph className='ws-header__graph' procent={completedTaskWeek / allTaskWeek * 100} />\r\n                </div>\r\n                <Graph className='week-statistic__graph' title='Прогресс' data={WEEK} sign={WeekDay} />\r\n                <InlineGraphs className='week-statistic__inline' title='Недавно выполненные' data={WEEK} />\r\n            </div>\r\n            <div className='week-statistic'>\r\n                <div className='week-statistic__header ws-header'>\r\n                    <Title className='ws-title'>Задачи за год</Title>\r\n                    <div className='ws-header__completed'>Завершенные задачи</div>\r\n                    <div className='ws-header__number'>{`${completedTaskYear}/${tasks.length + statistic.allTime}`}</div>\r\n                </div>\r\n                <Graph className='week-statistic__graph' title='Прогресс' data={YEAR} sign={MonthName} />\r\n                <InlineGraphs className='week-statistic__inline' title='Недавно выполненные' data={YEAR} />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default connect(({ tasks, statistic }) => ({\r\n    tasks,\r\n    statistic,\r\n}), { UpdateStat: Actions.UpdateStat })(Statistic);","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './Input.scss';\r\n\r\nfunction Input({ id, className, label, error, ...attrs }) {\r\n    const classes = classNames(\r\n        'input',\r\n        className,\r\n        { error },\r\n    );\r\n\r\n    return (\r\n        <>\r\n            {label\r\n                && <label className='input__label' htmlFor={id}>{label}</label>\r\n            }\r\n            <input\r\n                name={id}\r\n                id={id}\r\n                className={classes}\r\n                {...attrs}\r\n            />\r\n            {error\r\n                && <span className='input__error'>{error}</span>\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nInput.propTypes = {\r\n    className: PropTypes.string,\r\n    id: PropTypes.string,\r\n    label: PropTypes.string,\r\n    error: PropTypes.string,\r\n}\r\n\r\nInput.defaultProps = {\r\n    className: '',\r\n    id: '',\r\n    label: '',\r\n    error: '',\r\n}\r\n\r\nexport default Input;","import React, { useState } from 'react';\r\nimport classNames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { declOfNum } from '../../services.js'\r\nimport Input from '../Input/Input';\r\n\r\nimport './Category.scss';\r\n\r\nfunction Category({ id, count, name, color, className, active, onClick, onDelClick, onChangeClick }) {\r\n    const classes = classNames(\r\n        'category',\r\n        className,\r\n        { active },\r\n    );\r\n\r\n    const [isChange, setIsChange] = useState(false);\r\n    const [newName, setNewName] = useState('');\r\n    const [newColor, setNewColor] = useState('');\r\n\r\n    const onChange = (e) => {\r\n        e.stopPropagation();\r\n        if (isChange) {\r\n            onChangeClick(\r\n                {\r\n                    id, count,\r\n                    name: newName,\r\n                    color: newColor\r\n                }\r\n            );\r\n            setIsChange(false);\r\n        } else {\r\n            setNewName(name);\r\n            setNewColor(color);\r\n            setIsChange(true);\r\n        }\r\n    };\r\n\r\n    const handleColorChange = e => setNewColor(e.target.value);\r\n\r\n    const handleInputChange = e => setNewName(e.target.value);\r\n\r\n    const stopPropagation = e => e.stopPropagation();\r\n\r\n    const handleDelClick = e => onDelClick(e, id);\r\n\r\n    const handleClick = () => onClick(id);\r\n\r\n    return (\r\n        <div className={classes} onClick={handleClick}>\r\n            {!isChange ? <div className='category__icon' style={{ backgroundColor: color }}></div> :\r\n                <Input\r\n                    type='color'\r\n                    className='category__color'\r\n                    value={newColor}\r\n                    onClick={stopPropagation}\r\n                    onChange={handleColorChange}\r\n                />}\r\n            {id !== 1 &&\r\n                <>\r\n                    <div className='category__change' onClick={onChange}>/</div>\r\n                    <div className='category__del' onClick={handleDelClick}>\r\n                        <svg viewBox='-57 0 512 512' xmlns='http://www.w3.org/2000/svg' fill='#aaa'>\r\n                            <path d='m156.371094 30.90625h85.570312v14.398438h30.902344v-16.414063c.003906-15.929687-12.949219-28.890625-28.871094-28.890625h-89.632812c-15.921875 0-28.875 12.960938-28.875 28.890625v16.414063h30.90625zm0 0' />\r\n                            <path d='m344.210938 167.75h-290.109376c-7.949218 0-14.207031 6.78125-13.566406 14.707031l24.253906 299.90625c1.351563 16.742188 15.316407 29.636719 32.09375 29.636719h204.542969c16.777344 0 30.742188-12.894531 32.09375-29.640625l24.253907-299.902344c.644531-7.925781-5.613282-14.707031-13.5625-14.707031zm-219.863282 312.261719c-.324218.019531-.648437.03125-.96875.03125-8.101562 0-14.902344-6.308594-15.40625-14.503907l-15.199218-246.207031c-.523438-8.519531 5.957031-15.851562 14.472656-16.375 8.488281-.515625 15.851562 5.949219 16.375 14.472657l15.195312 246.207031c.527344 8.519531-5.953125 15.847656-14.46875 16.375zm90.433594-15.421875c0 8.53125-6.917969 15.449218-15.453125 15.449218s-15.453125-6.917968-15.453125-15.449218v-246.210938c0-8.535156 6.917969-15.453125 15.453125-15.453125 8.53125 0 15.453125 6.917969 15.453125 15.453125zm90.757812-245.300782-14.511718 246.207032c-.480469 8.210937-7.292969 14.542968-15.410156 14.542968-.304688 0-.613282-.007812-.921876-.023437-8.519531-.503906-15.019531-7.816406-14.515624-16.335937l14.507812-246.210938c.5-8.519531 7.789062-15.019531 16.332031-14.515625 8.519531.5 15.019531 7.816406 14.519531 16.335937zm0 0' />\r\n                            <path d='m397.648438 120.0625-10.148438-30.421875c-2.675781-8.019531-10.183594-13.429687-18.640625-13.429687h-339.410156c-8.453125 0-15.964844 5.410156-18.636719 13.429687l-10.148438 30.421875c-1.957031 5.867188.589844 11.851562 5.34375 14.835938 1.9375 1.214843 4.230469 1.945312 6.75 1.945312h372.796876c2.519531 0 4.816406-.730469 6.75-1.949219 4.753906-2.984375 7.300781-8.96875 5.34375-14.832031zm0 0' />\r\n                        </svg>\r\n                    </div>\r\n                </>}\r\n            {!isChange && <div className='category__tasks'>{count} {declOfNum(count, ['Задача', 'Задачи', 'Задач'])}</div>}\r\n            {!isChange ? <div className='category__name'>{name}</div> :\r\n                <Input\r\n                    type='text'\r\n                    className='category__input'\r\n                    value={newName}\r\n                    onChange={handleInputChange}\r\n                    onClick={stopPropagation}\r\n                />}\r\n        </div>\r\n    )\r\n}\r\n\r\nCategory.propTypes = {\r\n    id: PropTypes.number.isRequired,\r\n    className: PropTypes.string,\r\n    count: PropTypes.number,\r\n    name: PropTypes.string,\r\n    color: PropTypes.string,\r\n    active: PropTypes.bool,\r\n    onClick: PropTypes.func,\r\n}\r\n\r\nCategory.defaultProps = {\r\n    className: '',\r\n    count: 0,\r\n    name: 'Зазное',\r\n    color: '#ccc',\r\n    active: false,\r\n    onClick: () => { },\r\n}\r\n\r\nexport default Category;","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Category from '../Category/Category';\r\n\r\nimport './Categories.scss';\r\n\r\n\r\nfunction Categories({ className, categories, activeCategory, onClick, onAddClick, onDelClick, onChangeClick }) {\r\n    const classes = classNames(\r\n        'categories',\r\n        className\r\n    );\r\n\r\n    const handleClickAdd = () => onAddClick((new Date()).getTime());\r\n\r\n    return (\r\n        <div className={classes}>\r\n            {categories.map(({ id, count, name, color }) => (\r\n                <Category\r\n                    id={id}\r\n                    key={id}\r\n                    count={count}\r\n                    name={name}\r\n                    color={color}\r\n                    onClick={onClick}\r\n                    active={activeCategory === id}\r\n                    onDelClick={onDelClick}\r\n                    onChangeClick={onChangeClick} />\r\n            ))}\r\n            <div className='categories__add' onClick={handleClickAdd}><span>+</span></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nCategories.propTypes = {\r\n    className: PropTypes.string,\r\n    categories: PropTypes.array,\r\n    activeCategory: PropTypes.number,\r\n    onClick: PropTypes.func,\r\n}\r\n\r\nCategories.defaultProps = {\r\n    className: '',\r\n    categories: [],\r\n    activeCategory: null,\r\n    onClick: () => { },\r\n}\r\n\r\nexport default Categories;","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './Filter.scss';\r\n\r\nconst Buttons = [\r\n    {\r\n        id: 'all',\r\n        text: 'Все'\r\n    },\r\n    {\r\n        id: 'completed',\r\n        text: 'Завершенные'\r\n    },\r\n    {\r\n        id: 'active',\r\n        text: 'Активные'\r\n    },\r\n];\r\n\r\nfunction Filter({ className, activeFilter, onClick }) {\r\n    const classes = classNames(\r\n        'filter',\r\n        className,\r\n    );\r\n\r\n    return (\r\n        <div className={classes}>\r\n            {Buttons.map(({ id, text }) => (\r\n                <button\r\n                    className={`filter__item ${activeFilter === id ? 'active' : ''}`}\r\n                    key={id}\r\n                    onClick={() => onClick(id)}>{text}</button>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nFilter.propTypes = {\r\n    className: PropTypes.string,\r\n    activeFilter: PropTypes.string,\r\n    onClick: PropTypes.func,\r\n}\r\n\r\nFilter.defaultProps = {\r\n    className: '',\r\n    activeFilter: 'all',\r\n    onClick: () => { },\r\n}\r\n\r\nexport default Filter;","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './Task.scss';\r\n\r\nfunction Task({ id, className, isCompleted, text, category, time, onClick, onDelClick }) {\r\n    const classes = classNames(\r\n        'task',\r\n        className,\r\n        isCompleted === true ? 'completed' : ''\r\n    );\r\n\r\n    const handleClick = () => onClick(id);\r\n\r\n    const handleDelClick = () => onDelClick(id, category?.id, time);\r\n\r\n    return (\r\n        <div className={classes}>\r\n            <span className='task__text' onClick={handleClick}>{text}</span>\r\n            <span className='task__category' onClick={handleDelClick} style={{ backgroundColor: category?.color ?? '#e5768c' }}>\r\n                <svg viewBox='-57 0 512 512' xmlns='http://www.w3.org/2000/svg' fill='#fff'>\r\n                    <path d='m156.371094 30.90625h85.570312v14.398438h30.902344v-16.414063c.003906-15.929687-12.949219-28.890625-28.871094-28.890625h-89.632812c-15.921875 0-28.875 12.960938-28.875 28.890625v16.414063h30.90625zm0 0' />\r\n                    <path d='m344.210938 167.75h-290.109376c-7.949218 0-14.207031 6.78125-13.566406 14.707031l24.253906 299.90625c1.351563 16.742188 15.316407 29.636719 32.09375 29.636719h204.542969c16.777344 0 30.742188-12.894531 32.09375-29.640625l24.253907-299.902344c.644531-7.925781-5.613282-14.707031-13.5625-14.707031zm-219.863282 312.261719c-.324218.019531-.648437.03125-.96875.03125-8.101562 0-14.902344-6.308594-15.40625-14.503907l-15.199218-246.207031c-.523438-8.519531 5.957031-15.851562 14.472656-16.375 8.488281-.515625 15.851562 5.949219 16.375 14.472657l15.195312 246.207031c.527344 8.519531-5.953125 15.847656-14.46875 16.375zm90.433594-15.421875c0 8.53125-6.917969 15.449218-15.453125 15.449218s-15.453125-6.917968-15.453125-15.449218v-246.210938c0-8.535156 6.917969-15.453125 15.453125-15.453125 8.53125 0 15.453125 6.917969 15.453125 15.453125zm90.757812-245.300782-14.511718 246.207032c-.480469 8.210937-7.292969 14.542968-15.410156 14.542968-.304688 0-.613282-.007812-.921876-.023437-8.519531-.503906-15.019531-7.816406-14.515624-16.335937l14.507812-246.210938c.5-8.519531 7.789062-15.019531 16.332031-14.515625 8.519531.5 15.019531 7.816406 14.519531 16.335937zm0 0' />\r\n                    <path d='m397.648438 120.0625-10.148438-30.421875c-2.675781-8.019531-10.183594-13.429687-18.640625-13.429687h-339.410156c-8.453125 0-15.964844 5.410156-18.636719 13.429687l-10.148438 30.421875c-1.957031 5.867188.589844 11.851562 5.34375 14.835938 1.9375 1.214843 4.230469 1.945312 6.75 1.945312h372.796876c2.519531 0 4.816406-.730469 6.75-1.949219 4.753906-2.984375 7.300781-8.96875 5.34375-14.832031zm0 0' />\r\n                </svg>\r\n            </span>\r\n        </div>\r\n    );\r\n}\r\n\r\nTask.propTypes = {\r\n    className: PropTypes.string,\r\n    id: PropTypes.number,\r\n    isCompleted: PropTypes.bool,\r\n    text: PropTypes.string,\r\n    category: PropTypes.any,\r\n    onClick: PropTypes.func,\r\n}\r\n\r\nTask.defaultProps = {\r\n    className: '',\r\n    id: null,\r\n    isCompleted: false,\r\n    text: '',\r\n    category: null,\r\n    onClick: () => { },\r\n}\r\n\r\nexport default Task;","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Task from '../../components/Task/Task';\r\n\r\nimport './TaskList.scss';\r\n\r\nfunction TaskList({ className, tasks, categories, onClick, onDelClick }) {\r\n    const classes = classNames(\r\n        'taskList',\r\n        className,\r\n    );\r\n\r\n    return (\r\n        <div className={classes}>\r\n            {tasks.map(({ id, text, category, isCompleted, time }) => (\r\n                <Task\r\n                    key={id}\r\n                    id={id}\r\n                    text={text}\r\n                    category={categories.find(ctg => ctg.id === category)}\r\n                    isCompleted={isCompleted}\r\n                    time={time}\r\n                    onClick={onClick}\r\n                    onDelClick={onDelClick} />\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nTaskList.propTypes = {\r\n    className: PropTypes.string,\r\n    tasks: PropTypes.array,\r\n    categories: PropTypes.array,\r\n    onClick: PropTypes.func,\r\n}\r\n\r\nTaskList.defaultProps = {\r\n    className: '',\r\n    tasks: [],\r\n    categories: [],\r\n    onClick: () => { },\r\n}\r\n\r\nexport default TaskList;","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Actions from '../../actions/actionCreator';\r\n\r\nimport Categories from '../../components/Categories/Categories';\r\nimport Filter from '../../components/Filter/Filter';\r\nimport Input from '../../components/Input/Input';\r\nimport TaskList from '../../components/TaskList/TaskList';\r\n\r\nimport './Tasks.scss';\r\n\r\n\r\nfunction Tasks(props) {\r\n    const { tasks, categories, activeCategory, activeFilter } = props;\r\n\r\n    let filteredTasks = activeCategory ? tasks.filter(task => task.category === activeCategory) : [...tasks];\r\n    filteredTasks = activeFilter === 'all' ?\r\n        filteredTasks :\r\n        activeFilter === 'active' ?\r\n            filteredTasks.filter(task => task.isCompleted === false) :\r\n            filteredTasks.filter(task => task.isCompleted === true);\r\n\r\n    const [value, setValue] = useState('');\r\n\r\n    const addTask = ({ key }) => {\r\n        const category = activeCategory ? activeCategory : 1;\r\n        if ((key === 'Enter' || key === undefined) && value.length > 0) {\r\n            props.AddTask({\r\n                id: (new Date()).getTime(),\r\n                text: value,\r\n                category: category,\r\n                isCompleted: false\r\n            });\r\n            props.AddCountCategory(category);\r\n            setValue('');\r\n        }\r\n    };\r\n\r\n    const onDeleteCategory = (e, id) => {\r\n        e.stopPropagation();\r\n        props.ChangeActiveCategory(null);\r\n        props.DeleteCategory(id)\r\n    };\r\n\r\n    const handleInputChange = e => setValue(e.target.value);\r\n\r\n    const handleDelClick = (id, category, time) => {\r\n        props.SubtractCountCategory(category);\r\n        props.UpdateStat(time);\r\n        props.DeleteTask(id);\r\n    }\r\n\r\n    return (\r\n        <div className='todo'>\r\n\r\n            <Categories\r\n                categories={categories}\r\n                className='todo__categories'\r\n                activeCategory={activeCategory}\r\n                onClick={props.ChangeActiveCategory}\r\n                onAddClick={props.AddCategory}\r\n                onDelClick={onDeleteCategory}\r\n                onChangeClick={props.ChangeCategory} />\r\n\r\n            <Filter className='todo__filter'\r\n                activeFilter={activeFilter}\r\n                onClick={props.ChangeActiveFilter} />\r\n\r\n            <div className='todo__input'>\r\n                <Input value={value}\r\n                    onChange={handleInputChange}\r\n                    onKeyDown={addTask}\r\n                    type='text'\r\n                    placeholder='Добавить задачу ...' />\r\n                <button onClick={addTask}>+</button>\r\n            </div>\r\n\r\n            <TaskList\r\n                className='todo__list'\r\n                tasks={filteredTasks}\r\n                categories={categories}\r\n                onClick={props.ChangeTask}\r\n                onDelClick={handleDelClick}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(({ tasks, categories, activeCategory, activeFilter }) => ({\r\n    tasks,\r\n    categories,\r\n    activeCategory,\r\n    activeFilter,\r\n}), Actions)(Tasks);","import React from 'react';\r\n\r\nimport './NotFound.scss';\r\n\r\nfunction NotFound() {\r\n    return (\r\n        <div className='notFound'>\r\n            <svg className='notFound__img' version='1.1' xmlns='http://www.w3.org/2000/svg' x='0px' y='0px'\r\n                viewBox='0 0 200 82.7' >\r\n\r\n                <g id='Calque_1'>\r\n                    <text id='XMLID_3_' transform='matrix(1.2187 0 0 1 13 75.6393)' className=' st1'>4</text>\r\n                    <text id='XMLID_4_' transform='matrix(1.2187 0 0 1 133.0003 73.6393)' className=' st1'>4</text>\r\n                </g>\r\n                <g id='Calque_2'>\r\n                    <g>\r\n                        <path id='XMLID_11_' d='M81.8,29.2c4.1-5.7,10.7-9.4,18.3-9.4c6.3,0,12.1,2.7,16.1,6.9c0.6-0.4,1.1-0.7,1.7-1.1\r\n\t\tc-4.4-4.8-10.8-7.9-17.8-7.9c-8.3,0-15.6,4.2-20,10.6C80.7,28.5,81.3,28.8,81.8,29.2z'/>\r\n                        <path id='XMLID_2_' d='M118.1,53.7c-4,5.7-10.7,9.5-18.2,9.5c-6.3,0-12.1-2.6-16.2-6.8c-0.6,0.4-1.1,0.7-1.7,1.1\r\n\t\tc4.4,4.8,10.8,7.8,17.9,7.8c8.3,0,15.6-4.3,19.9-10.7C119.2,54.5,118.6,54.1,118.1,53.7z'/>\r\n                        <animateTransform attributeName='transform' type='rotate' from='360 100 41.3' to='0 100 41.3' dur='10s' repeatCount='indefinite' />\r\n                    </g>\r\n                    <g id='XMLID_6_'>\r\n                        <g id='XMLID_18_'>\r\n                            <circle className='notFound__circle' cx='100' cy='41' r='1'></circle>\r\n                        </g>\r\n                    </g><defs>\r\n                        <filter id='blurFilter4' x='-20' y='-20' width='200' height='200'>\r\n                            <feGaussianBlur in='SourceGraphic' stdDeviation='2' />\r\n                        </filter>\r\n                    </defs>\r\n                    <path id='XMLID_5_' d='M103.8,16.7c0.1,0.3,0.1,0.6,0.1,0.9c11.6,1.9,20.4,11.9,20.4,24.1c0,13.5-10.9,24.4-24.4,24.4\r\n  S75.6,55.1,75.6,41.7c0-3.2,0.6-6.3,1.7-9.1c-0.3-0.2-0.5-0.3-0.7-0.5c-1.2,3-1.9,6.2-1.9,9.6c0,14,11.3,25.3,25.3,25.3\r\n  s25.3-11.3,25.3-25.3C125.3,29,115.9,18.5,103.8,16.7z'/>\r\n                </g>\r\n            </svg>\r\n            <p className='notFound__message'>О-о-ох! Что-то сломалось.</p>\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default NotFound;","import { ActionTypes } from '../constants';\r\nimport { load } from 'redux-localstorage-simple';\r\nconst { ADD_TASK, DELETE_TASK, CHANGE_TASK } = ActionTypes;\r\n\r\nlet TASKS = load({ namespace: 'todo' });\r\n\r\nif (!TASKS || !TASKS.tasks || !TASKS.tasks.length) {\r\n    TASKS = {\r\n        tasks: [],\r\n    }\r\n}\r\n\r\nconst tasks = (state = TASKS.tasks, { id, type, text, category, isCompleted }) => {\r\n    switch (type) {\r\n        case ADD_TASK:\r\n            return [\r\n                ...state, {\r\n                    id,\r\n                    text,\r\n                    category,\r\n                    isCompleted,\r\n                }\r\n            ];\r\n        case DELETE_TASK:\r\n            return [...state].filter(task => task.id !== id);\r\n        case CHANGE_TASK:\r\n            return [...state].map(task => {\r\n                if (task.id === id) {\r\n                    if (task.isCompleted) {\r\n                        return { ...task, isCompleted: false, time: undefined };\r\n                    } else {\r\n                        return { ...task, isCompleted: true, time: (new Date()).getTime() };\r\n                    }\r\n                }\r\n                return task;\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default tasks;","import { ActionTypes } from '../constants';\r\nimport { load } from 'redux-localstorage-simple';\r\nconst { ADD_CATEGORY, DELETE_CATEGORY, CHANGE_CATEGORY, ADD_COUNT_CATEGORY, SUBTRACT_COUNT_CATEGORY } = ActionTypes;\r\n\r\nlet CATEGORIES = load({ namespace: 'todo' });\r\n\r\nif (!CATEGORIES || !CATEGORIES.categories || !CATEGORIES.categories.length) {\r\n    CATEGORIES = {\r\n        categories: [{\r\n            id: 1,\r\n            count: 0,\r\n            name: 'Разное',\r\n            color: '#e5768c'\r\n        }]\r\n    }\r\n}\r\n\r\nconst categories = (state = CATEGORIES.categories, { id, type, count, name, color }) => {\r\n    switch (type) {\r\n        case ADD_CATEGORY:\r\n            return [\r\n                ...state, {\r\n                    id,\r\n                    count,\r\n                    name,\r\n                    color\r\n                }\r\n            ];\r\n        case DELETE_CATEGORY:\r\n            return [...state].filter(category => category.id !== id);\r\n        case CHANGE_CATEGORY:\r\n            return [...state].map(category => {\r\n                if (category.id === id) {\r\n                    return { ...category, name: name, color: color, count: count ? count : category.count };\r\n                }\r\n                return category;\r\n            });\r\n        case ADD_COUNT_CATEGORY:\r\n            return [...state].map(category => {\r\n                if (category.id === id) {\r\n                    return { ...category, count: category.count + 1 };\r\n                }\r\n                return category;\r\n            });\r\n        case SUBTRACT_COUNT_CATEGORY:\r\n            return [...state].map(category => {\r\n                if (category.id === id) {\r\n                    return { ...category, count: category.count - 1 };\r\n                }\r\n                return category;\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default categories;","import { ActionTypes } from '../constants';\r\nconst { CHANGE_ACTIVECATEGORY } = ActionTypes;\r\n\r\nconst activeCategory = (state = null, { id, type }) => {\r\n    switch (type) {\r\n        case CHANGE_ACTIVECATEGORY:\r\n            return state === id ? null : id;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default activeCategory;","import { ActionTypes } from '../constants';\r\nconst { CHANGE_ACTIVEFILTER } = ActionTypes;\r\n\r\nconst activeFilter = (state = 'all', { id, type }) => {\r\n    switch (type) {\r\n        case CHANGE_ACTIVEFILTER:\r\n            return state !== id ? id : state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default activeFilter;","import { ActionTypes } from '../constants';\r\nimport { load } from 'redux-localstorage-simple';\r\nconst { UPDATE_STAT } = ActionTypes;\r\n\r\nlet STAT = load({ namespace: 'todo' });\r\n\r\nif (!STAT || !STAT.statistic) {\r\n    STAT = {\r\n        statistic: {\r\n            allTime: 0,\r\n            lastUpdate: (new Date()).toDateString(),\r\n            year: new Array(12).fill(0),\r\n            week: new Array(7).fill(0)\r\n        },\r\n    }\r\n}\r\n\r\nfunction getDay(date) {\r\n    return date.getDay() - 1 === -1 ? 6 : date.getDay() - 1;\r\n}\r\n\r\nconst statistic = (state = STAT.statistic, { type, time }) => {\r\n    switch (type) {\r\n        case UPDATE_STAT: {\r\n            const TIME = time ? new Date(time) : new Date();\r\n            const LastUpdate = new Date(state.lastUpdate);\r\n\r\n            const Monday = new Date(LastUpdate.setDate(LastUpdate.getDate() - getDay(LastUpdate)));\r\n            const Sunday = new Date(LastUpdate.setDate(LastUpdate.getDate() + 6 - getDay(LastUpdate)));\r\n\r\n            return {\r\n                ...state,\r\n                allTime: time ? state.allTime + 1 : state.allTime,\r\n                lastUpdate: (new Date()).toDateString(),\r\n                year: TIME.getFullYear() > LastUpdate.getFullYear() ?\r\n                    state.year.map(() => (0)) :\r\n                    state.year.map((month, index) => (time && index === TIME.getMonth() ? month + 1 : month)),\r\n                week: TIME > Sunday ?\r\n                    state.week.map((day, index) => (time && index === getDay(TIME) ? 1 : 0)) :\r\n                    TIME > Monday ?\r\n                        state.week.map((day, index) => (time && index === getDay(TIME) ? day + 1 : day)) :\r\n                        state.week\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default statistic;","import { createStore, compose, applyMiddleware } from 'redux';\r\nimport rootReducer from './reducers/index';\r\nimport { save } from 'redux-localstorage-simple';\r\n\r\nconst composeEnhancers =\r\n    process.env.NODE_ENV !== 'object' &&\r\n        typeof window === 'object' &&\r\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\r\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({}) : compose;\r\n\r\n\r\nconst configureStore = preloadedState => (\r\n    createStore(\r\n        rootReducer,\r\n        preloadedState,\r\n        composeEnhancers(\r\n            applyMiddleware(save({ namespace: 'todo' }))\r\n        ),\r\n\r\n    )\r\n);\r\n\r\nconst store = configureStore({});\r\n\r\nexport default store;","import { combineReducers } from 'redux';\r\n\r\nimport tasks from './tasks';\r\nimport categories from './categories';\r\nimport activeCategory from './activeCategory';\r\nimport activeFilter from './activeFilter';\r\nimport statistic from './statistic';\r\n\r\nconst rootReducer = combineReducers({ tasks, categories, activeCategory, activeFilter, statistic });\r\n\r\nexport default rootReducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport { HashRouter, Switch, Route } from 'react-router-dom'\r\n\r\nimport Home from './containers/Home/Home';\r\nimport Statistic from './containers/Statistic/Statistic';\r\nimport Tasks from './containers/Tasks/Tasks';\r\nimport NotFound from './components/NotFound/NotFound';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store.js';\r\n\r\nReactDOM.render((\r\n  <Provider store={store}>\r\n    <HashRouter>\r\n      <App>\r\n        <Switch>\r\n          <Route exact path='/' component={Home} />\r\n          <Route path='/tasks' component={Tasks} />\r\n          <Route path='/statistics' component={Statistic} />\r\n          <Route path='*' component={NotFound} />\r\n        </Switch>\r\n      </App>\r\n    </HashRouter>\r\n  </Provider>\r\n),\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}